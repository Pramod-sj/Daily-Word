plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'dagger.hilt.android.plugin'
}

def keyPropertiesFile = rootProject.file("key.properties")
def keyProperties = new Properties()
keyProperties.load(new FileInputStream(keyPropertiesFile))

def endPointPropertiesFile = rootProject.file("endpoint.properties")
def endpointProperties = new Properties()
endpointProperties.load(new FileInputStream(endPointPropertiesFile))

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.pramod.dailyword"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 202001051
        versionName "2.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "GOOGLE_LICENSE_KEY", keyProperties['GOOGLE_LICENSE_KEY'])

        /**
         * Base urls and Endpoints
         */
        buildConfigField("String", "BASE_URL", endpointProperties['BASE_URL'])
        buildConfigField("String", "API_BASE_URL", endpointProperties['API_BASE_URL'])
        buildConfigField("String", "WORLD_TIME_BASE_URL", endpointProperties['WORLD_TIME_BASE_URL'])
        buildConfigField("String", "GET_WORD_OF_THE_DAY", endpointProperties['GET_WORD_OF_THE_DAY'])
        buildConfigField("String", "GET_WORDS", endpointProperties['GET_WORDS'])
        buildConfigField("String", "GET_RANDOM_WORD", endpointProperties['GET_RANDOM_WORD'])
        buildConfigField("String", "PRIVACY_POLICY", endpointProperties['PRIVACY_POLICY'])
        buildConfigField("String", "TERM_AND_CONDITION", endpointProperties['TERM_AND_CONDITION'])
        buildConfigField("String", "GET_PUBLIC_IP", endpointProperties['GET_PUBLIC_IP'])
        buildConfigField("String", "GET_IP_DETAILS", endpointProperties['GET_IP_DETAILS'])
        /**
         * End
         */
    }

    buildTypes {
        debug {
            manifestPlaceholders = [crashlyticsCollectionEnabled: "false"]
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [crashlyticsCollectionEnabled: "true"]
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    buildFeatures {
        dataBinding = true
    }

// To inline the bytecode built with JVM target 1.8 into
// bytecode that is being built with JVM target 1.6. (e.g. navArgs)


    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }

}

dependencies {
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'

    def room_version = "2.3.0-beta03"
    def lifecycle_version = "2.3.0"
    def hilt_viewmodels = "1.0.0-alpha03"
    def hilt_version = "2.33-beta"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.4.30"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'


    //ui related libs
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.recyclerview:recyclerview:1.2.0-beta02'

    //in-app purchase helper lib
    implementation 'com.anjlab.android.iab.v3:library:1.0.44'

    //google core lib mainly using it for in-app update
    implementation 'com.google.android.play:core-ktx:1.8.1'

    //preference library
    implementation 'androidx.preference:preference-ktx:1.1.1'

    //data binding
    kapt "com.android.databinding:compiler:3.6.1"

    //retrofit libs
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //room libs
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    //android lifecycle libs
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    //firebase libs
    implementation 'com.google.firebase:firebase-messaging:21.0.1'
    implementation 'com.google.firebase:firebase-config-ktx:20.0.4'
    implementation 'com.google.firebase:firebase-analytics-ktx:18.0.2'
    implementation 'com.google.firebase:firebase-crashlytics-ktx:17.4.0'

    //paging lib
    implementation 'androidx.paging:paging-runtime-ktx:3.0.0-beta02'

    //FAN lib
    implementation 'com.facebook.android:audience-network-sdk:6.3.0'

    //AutoStarter lib
    implementation 'com.github.judemanutd:autostarter:1.0.8'

    //lottie
    implementation 'com.airbnb.android:lottie:3.4.1'

    //doki i.e. Don't kill my app
    implementation('dev.doubledot.doki:library:0.0.1@aar') {
        transitive = true
    }

    //in-app browser lib
    implementation "androidx.browser:browser:1.3.0"


    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_viewmodels"
    implementation 'androidx.hilt:hilt-navigation-fragment:1.0.0-beta01'


    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    //custom lib to play and store audio files
    implementation project(path: ':audioplayer')


    implementation 'androidx.webkit:webkit:1.4.0-beta01'
}
