plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'dagger.hilt.android.plugin'
    id 'com.google.devtools.ksp'
    id 'kotlin-kapt'
}

def keyPropertiesFile = rootProject.file("key.properties")
def keyProperties = new Properties()
keyProperties.load(new FileInputStream(keyPropertiesFile))

def endPointPropertiesFile = rootProject.file("endpoint.properties")
def endpointProperties = new Properties()
endpointProperties.load(new FileInputStream(endPointPropertiesFile))

android {

    compileSdk 34

    defaultConfig {
        applicationId "com.pramod.dailyword"
        minSdk 21
        targetSdk 34
        versionCode 202410060
        versionName "2.4.3"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "GOOGLE_LICENSE_KEY", keyProperties['GOOGLE_LICENSE_KEY'])
        buildConfigField("String", "MERCHANT_ID", keyProperties['MERCHANT_ID'])
        buildConfigField("String", "GOOGLE_IN_APP_RSA_KEY", keyProperties['GOOGLE_IN_APP_RSA_KEY'])

        /**
         * Base urls and Endpoints
         */
        buildConfigField("String", "BASE_URL", endpointProperties['BASE_URL'])
        buildConfigField("String", "API_BASE_URL", endpointProperties['API_BASE_URL'])
        buildConfigField("String", "WORLD_TIME_BASE_URL", endpointProperties['WORLD_TIME_BASE_URL'])
        buildConfigField("String", "GET_WORD_OF_THE_DAY", endpointProperties['GET_WORD_OF_THE_DAY'])
        buildConfigField("String", "GET_WORDS", endpointProperties['GET_WORDS'])
        buildConfigField("String", "GET_WORDS_PAGING", endpointProperties['GET_WORDS_PAGING'])

        buildConfigField("String", "GET_RANDOM_WORD", endpointProperties['GET_RANDOM_WORD'])
        buildConfigField("String", "PRIVACY_POLICY", endpointProperties['PRIVACY_POLICY'])
        buildConfigField("String", "TERM_AND_CONDITION", endpointProperties['TERM_AND_CONDITION'])
        buildConfigField("String", "GET_PUBLIC_IP", endpointProperties['GET_PUBLIC_IP'])
        buildConfigField("String", "GET_IP_DETAILS", endpointProperties['GET_IP_DETAILS'])
        buildConfigField("String", "HOME_BACKGROUND_URL", endpointProperties['HOME_BACKGROUND_URL'])
        /**
         * End
         */
    }

    buildTypes {
        debug {
            manifestPlaceholders = [crashlyticsCollectionEnabled: "false"]
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [crashlyticsCollectionEnabled: "true"]
            ndk {
                debugSymbolLevel 'SYMBOL_TABLE'
            }
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    buildFeatures {
        dataBinding = true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.9"
    }

    kotlinOptions {
        jvmTarget = "17"
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }

    namespace 'com.pramod.dailyword'

}

kapt {
    correctErrorTypes = true
}

dependencies {

    def lifecycle_version = '2.7.0'
    def billing_version = '7.0.0'

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.22"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.22"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'


    //ui related libs
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'

    //in-app purchase helper lib (this lib doesn't support billing version 3)
    //implementation 'com.anjlab.android.iab.v3:library:1.0.44'

    //google core lib mainly using it for in-app update
    implementation 'com.google.android.play:app-update-ktx:2.1.0'
    implementation 'com.google.android.play:review-ktx:2.0.1'

    //preference library
    implementation 'androidx.preference:preference-ktx:1.2.1'

    //data binding
    ksp "com.android.databinding:compiler:3.6.1"

    //retrofit libs
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'

    //room libs
    implementation "androidx.room:room-runtime:2.6.1"
    implementation "androidx.room:room-ktx:2.6.1"
    implementation "androidx.room:room-paging:2.6.1"
    ksp "androidx.room:room-compiler:2.6.1"

    //android lifecycle libs
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.8.1"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    //firebase libs
    implementation 'com.google.firebase:firebase-messaging:24.0.0'
    implementation 'com.google.firebase:firebase-config-ktx:22.0.0'
    implementation 'com.google.firebase:firebase-analytics-ktx:22.0.1'
    implementation 'com.google.firebase:firebase-crashlytics-ktx:19.0.1'

    //paging lib
    implementation 'androidx.paging:paging-runtime-ktx:3.3.0'

    //FAN lib
    implementation 'com.facebook.android:audience-network-sdk:6.3.0'

    //AutoStarter lib
    implementation 'com.github.judemanutd:autostarter:1.1.0'

    //lottie
    implementation 'com.airbnb.android:lottie:6.2.0'
    implementation "com.airbnb.android:lottie-compose:6.2.0"

    //in-app browser lib
    implementation 'androidx.browser:browser:1.8.0'

    implementation "com.google.dagger:hilt-android:2.51.1"
    kapt "com.google.dagger:hilt-compiler:2.51.1"
    implementation 'androidx.hilt:hilt-navigation-fragment:1.2.0'
    implementation "androidx.hilt:hilt-work:1.2.0"


    //image loading library
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    ksp 'com.github.bumptech.glide:compiler:4.12.0'

    //custom lib to play and store audio files
    implementation project(path: ':audioplayer')

    //in-app browser
    implementation 'androidx.webkit:webkit:1.11.0'

    //detecting leaks
    //debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    //billing lib
    implementation "com.android.billingclient:billing-ktx:$billing_version"

    implementation "com.squareup.okhttp3:logging-interceptor:4.12.0"

    implementation "com.jakewharton.timber:timber:5.0.1"

    def composeBom = platform('androidx.compose:compose-bom:2024.09.03')
    implementation composeBom
    androidTestImplementation composeBom
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.material:material'
    implementation "androidx.compose.material3:material3"
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.activity:activity-compose:1.9.2'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    implementation "com.google.accompanist:accompanist-themeadapter-appcompat:0.35.0-alpha"

    implementation("androidx.work:work-runtime-ktx:2.9.0")


}
